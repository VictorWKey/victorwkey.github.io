---
import ProjectCard from './ProjectCard.astro'
import ProjectImageModal from './ProjectImageModal.astro'
import JavaScript from "../icons/JavaScript.jsx";
import HTML from "../icons/HTML.jsx";
import CSS from "../icons/CSS.jsx";
import ReactLogo from "../icons/ReactLogo.jsx";
import AstroLogo from "../icons/AstroLogo.jsx";
import Tailwind from "../icons/Tailwind.jsx";
import TypeScript from "../icons/TypeScript.jsx";
import Python from "../icons/Python.jsx";
import Tensorflow from "../icons/Tensorflow.jsx";
import FastAPI from "../icons/FastAPI.jsx";
import AWS from "../icons/AWS.jsx";
import MongoDB from "../icons/MongoDB.jsx";
import PostgreSQL from "../icons/PostgreSQL.jsx";
import NextJS from "../icons/NextJS.jsx";

const TAGS = {
  JavaScript: {
    name: "JavaScript",
    logo: JavaScript,
    category: "web"
  },
  HTML: {
    name: "HTML",
    logo: HTML,
    category: "web"
  },
  CSS: {
    name: "CSS",
    logo: CSS,
    category: "web"
  },
  React: {
    name: "React",
    logo: ReactLogo,
    category: "web"
  },
  Tailwind: {
    name: "Tailwind",
    logo: Tailwind,
    category: "web"
  },
  TypeScript: {
    name: "TypeScript",
    logo: TypeScript,
    category: "web"
  },
  Python: {
    name: "Python",
    logo: Python,
    category: "ai"
  },
  Astro: {
    name: "Astro",
    logo: AstroLogo,
    category: "web"
  },
  TensorFlow: {
    name: "TensorFlow",
    logo: Tensorflow,
    category: "ai"
  },
  FastAPI: {
    name: "FastAPI",
    logo: FastAPI,
    category: "backend"
  },
  AWS: {
    name: "AWS",
    logo: AWS,
    category: "cloud"
  },
  MongoDB: {
    name: "MongoDB",
    logo: MongoDB,
    category: "database"
  },
  PostgreSQL: {
    name: "PostgreSQL",
    logo: PostgreSQL,
    category: "database"
  },
  NextJS: {
    name: "Next.js",
    logo: NextJS,
    category: "web"
  }
}

const PROJECTS = [
  // Full-Stack Projects First
  {
    title: "AlineaDent - Dental Clinic Management System",
    desc: "Comprehensive dental clinic management system built with Next.js and Python/FastAPI. Manages patients, appointments, and dental treatments with visual calendar, integrated WhatsApp communication, AI conversation monitoring, and automatic report generation.",
    technologies: [TAGS.JavaScript, TAGS.HTML, TAGS.CSS, TAGS.NextJS, TAGS.Tailwind, TAGS.Python, TAGS.FastAPI, TAGS.PostgreSQL],
    img: "/img/alineadent-sistema.png",
    videoUrl: "https://youtu.be/B3vdKA7eDWM",
    category: "Full-Stack"
  },
  {
    title: "Work Orders Management System - Atta Montacargas",
    desc: "Mobile application for work order management developed with React Native and FastAPI. It includes user role management, work order creation and tracking, automatic PDF generation, a real-time metrics dashboard, and a complete status management system.",
    technologies: [TAGS.JavaScript, TAGS.HTML, TAGS.CSS, TAGS.React, TAGS.Python, TAGS.FastAPI],
    img: "/img/attamontacargas-sistema.png",
    images: [
      { src: "/img/attamontacargas-sistema-foto1.png", alt: "Panel de gestión de órdenes" },
      { src: "/img/attamontacargas-sistema-foto2.png", alt: "Generación de reportes PDF" }
    ],
    category: "Full-Stack"
  },
  // Frontend Projects Second
  {
    title: "Muscle Factory Gym Website",
    desc: "Informational gym website developed with Astro and React. Features service sections, supplement comparison tool with functional shopping cart, detailed product catalog, and comprehensive personal training information.",
    technologies: [TAGS.JavaScript, TAGS.HTML, TAGS.CSS, TAGS.Astro, TAGS.React, TAGS.Tailwind],
    img: "/img/musclefactory-website.png",
    site: "https://muscle-factory-website.vercel.app/",
    repository: "https://github.com/VictorWKey/muscle-factory-website",
    category: "Frontend"
  },
  {
    title: "E-Commerce Frontend",
    desc: "Modern e-commerce platform built with React and Tailwind CSS. Features interactive shopping cart, advanced filtering system, category navigation, detailed product views, and fully responsive design.",
    technologies: [TAGS.JavaScript, TAGS.HTML, TAGS.CSS, TAGS.React, TAGS.Tailwind],
    img: "/img/frontend-ecommerce.png",
    site: "https://shop-app-w-react.netlify.app/",
    repository: "https://github.com/VictorWKey/fronted-shop-react-app",
    category: "Frontend"
  }
]




---

<section id="projects" class="w-full min-h-screen flex flex-col items-center justify-center py-16 px-6 relative z-10 scroll-mt-16">
  <div class="w-full max-w-6xl">
    <h1 class="text-3xl sm:text-4xl lg:text-5xl font-bold text-white text-center mb-4 z-10 pt-4">Featured Projects</h1>
    <p class="text-base sm:text-lg lg:text-xl text-gray-300 text-center mb-8 max-w-3xl mx-auto">
      Explore my web development projects and applications ranging from business management systems to 
      <span class="text-primary">e-commerce</span> and <span class="text-primary">informational websites</span>
    </p>
    
    <!-- Filter Buttons -->
    <div class="flex flex-wrap justify-center gap-4 mb-12">
      <button 
        class="filter-btn active px-4 sm:px-6 py-2 sm:py-3 rounded-full text-sm sm:text-base font-medium transition-all duration-300 border-2 hover:scale-105"
        data-filter="all"
      >
        <span class="flex items-center gap-2">
          <svg class="w-3 h-3 sm:w-4 sm:h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 11H5m14 0a2 2 0 012 2v6a2 2 0 01-2 2H5a2 2 0 01-2-2v-6a2 2 0 012-2m14 0V9a2 2 0 00-2-2M5 11V9a2 2 0 012-2m0 0V5a2 2 0 012-2h6a2 2 0 012 2v2M7 7h10"></path>
          </svg>
          All Projects
        </span>
      </button>
      <button 
        class="filter-btn px-4 sm:px-6 py-2 sm:py-3 rounded-full text-sm sm:text-base font-medium transition-all duration-300 border-2 hover:scale-105"
        data-filter="Frontend"
      >
        <span class="flex items-center gap-2">
          <svg class="w-3 h-3 sm:w-4 sm:h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9.75 17L9 20l-1 1h8l-1-1-.75-3M3 13h18M5 17h14a2 2 0 002-2V5a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z"></path>
          </svg>
          Frontend
        </span>
      </button>
      <button 
        class="filter-btn px-4 sm:px-6 py-2 sm:py-3 rounded-full text-sm sm:text-base font-medium transition-all duration-300 border-2 hover:scale-105"
        data-filter="Full-Stack"
      >
        <span class="flex items-center gap-2">
          <svg class="w-3 h-3 sm:w-4 sm:h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19.428 15.428a2 2 0 00-1.022-.547l-2.387-.477a6 6 0 00-3.86.517l-.318.158a6 6 0 01-3.86.517L6.05 15.21a2 2 0 00-1.806.547M8 4h8l-1 1v5.172a2 2 0 00.586 1.414l5 5c1.26 1.26.367 3.414-1.415 3.414H4.828c-1.782 0-2.674-2.154-1.414-3.414l5-5A2 2 0 009 10.172V5L8 4z"></path>
          </svg>
          Full-Stack
        </span>
      </button>
    </div>
    
    <div id="projects-container" class="grid grid-cols-1 lg:grid-cols-2 xl:grid-cols-3 gap-8 items-stretch">
      {PROJECTS.map((project, index) => (
        <div class={`project-item transform hover:scale-105 transition-all duration-500 h-full`} data-category={project.category}>
          <ProjectCard 
            title={project.title} 
            desc={project.desc} 
            technologies={project.technologies} 
            webSite={project.site} 
            repository={project.repository} 
            videoUrl={project.videoUrl}
            img={project.img}
            category={project.category}
            images={project.images}
          />
        </div>
      ))}
    </div>
  </div>
</section>

<!-- Project Images Modal -->
<ProjectImageModal />

<style>
  /* Filter Button Styles */
  .filter-btn {
    background: rgba(255, 255, 255, 0.05);
    color: rgba(255, 255, 255, 0.8);
    border-color: rgba(255, 255, 255, 0.2);
    backdrop-filter: blur(10px);
  }

  .filter-btn:hover {
    background: rgba(255, 255, 255, 0.1);
    color: white;
    border-color: rgba(255, 255, 255, 0.4);
    transform: scale(1.05);
  }

  .filter-btn.active {
    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
    color: white;
    border-color: #667eea;
    box-shadow: 0 8px 32px rgba(102, 126, 234, 0.3);
  }

  .filter-btn.active:hover {
    transform: scale(1.05);
    box-shadow: 0 12px 40px rgba(102, 126, 234, 0.4);
  }

  /* Project Animation - Simplified */
  .project-item {
    opacity: 1;
    transform: scale(1);
    transition: all 0.3s ease;
  }

  .project-item.hidden {
    display: none !important;
  }
</style>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    const filterButtons = document.querySelectorAll('.filter-btn');
    const projectItems = document.querySelectorAll('.project-item');
    
    // Filter functionality - Simplified
    filterButtons.forEach(button => {
      button.addEventListener('click', function(event) {
        const target = event.currentTarget as HTMLButtonElement;
        const filter = target.getAttribute('data-filter');
        
        // Update active button
        filterButtons.forEach(btn => btn.classList.remove('active'));
        target.classList.add('active');
        
        // Filter projects instantly
        projectItems.forEach(item => {
          const category = item.getAttribute('data-category');
          
          if (filter === 'all' || category === filter) {
            item.classList.remove('hidden');
          } else {
            item.classList.add('hidden');
          }
        });
      });
    });
  });
</script>